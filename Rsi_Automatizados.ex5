//+------------------------------------------------------------------+
//|                                                          RSI.mq5 |
//|                                  Copyright 2023, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright " Lucas Toshio de Souza Miki"
#property link      "https://www.mql5.com"
#property version   "1.00"
//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
#include  <Trade/Trade.mqh>


input int Inp_RSI_Period   = 50;
input int Inp_RSIBuyLevel  = 20;
input int Inp_RSISellLevel = 80;
input double Inp_Volume = 1;
input double InpTP      = 2000;
input double InpSL      = 1000;

int hnd_rsi = 0;
double rsi[];
double last = 0;

CTrade trade;

int OnInit()
  {


   hnd_rsi = iRSI(_Symbol, _Period, Inp_RSI_Period, PRICE_CLOSE);   

   return(INIT_SUCCEEDED);
  }
void OnDeinit(const int reason)
  {

  }

void OnTick()
  {

   int copied = CopyBuffer(hnd_rsi, 0, 0, 5, rsi);
   
   if (copied < 4){
      return;
   }
   
   if ( ! SymbolInfoDouble(_Symbol, SYMBOL_LAST, last) ) {
      return;
   }
   // Compra  
   if ( rsi[4] <= Inp_RSIBuyLevel && PositionsTotal() == 0  ){
      trade.Buy(Inp_Volume, _Symbol, last, last - InpSL, last + InpTP);
   }
   
   // Venda
   if ( rsi[4] >= Inp_RSISellLevel && PositionsTotal() == 0 ){
      trade.Sell( Inp_Volume, _Symbol, last, last + InpSL, last - InpTP);
   
   }

   
   
  }
